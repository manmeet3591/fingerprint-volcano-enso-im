#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esgf-node.ipsl.upmc.fr - 2019/04/26 09:20:51
# Search URL: https://esgf-node.ipsl.upmc.fr/esg-search/wget/?distrib=false&dataset_id=cmip5.output1.IPSL.IPSL-CM5A-LR.past1000.mon.aerosol.aero.r1i1p1.v20120804|vesg.ipsl.upmc.fr
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='https://esgf-node.ipsl.upmc.fr/esg-search/wget/?distrib=false&dataset_id=cmip5.output1.IPSL.IPSL-CM5A-LR.past1000.mon.aerosol.aero.r1i1p1.v20120804|vesg.ipsl.upmc.fr'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'abs550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/abs550aer/abs550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'SHA256' 'f7bb2df7e4f58cd8a2f9de6ef1ace6bf9cc953d1f0c63a47caae55c4bca8a491'
'abs550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/abs550aer/abs550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'SHA256' '814ee692b42645a80c8b87776796920b368da43b3a4f7e21cfd66862cae2c372'
'abs550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/abs550aer/abs550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'SHA256' '463c2ac20290f543bf2921a8fb93fa4f2ae7fc4d73aae19745bd1c483a7fd76b'
'abs550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/abs550aer/abs550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'SHA256' 'bf419dad169df0048552434640716d779181d66cb51b427d052cd690157af8f8'
'abs550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/abs550aer/abs550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'SHA256' 'd26e62efb4ad7d3ea63e0080bbad33387684711aa9be8b197d2316d7180e300e'
'abs550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/abs550aer/abs550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' '31b14bdb7dfd97dbab75bd1edd0b1d4d6e98e8480c8eb3faef5db257f570dc68'
'cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-094912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/cdnc/cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-094912.nc' 'SHA256' '9077b5eefece6ad6cc18b295534f41e8c753170bda27dcb866d2e3499496ebc3'
'cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_095001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/cdnc/cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_095001-104912.nc' 'SHA256' '79d83e68e9608be21995d3e14e4b6b64f736bf29778282baa1f7fa8002ed8563'
'cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-114912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/cdnc/cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-114912.nc' 'SHA256' '752fdc58599eabd2de22071c4fc778648a39fb050a842c7b48a0f024f7ff858d'
'cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_115001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/cdnc/cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_115001-124912.nc' 'SHA256' 'f153f2e8ad6cb01337424f6f7078c36f12f072c2625cb18d80e862d8292d7877'
'cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-134912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/cdnc/cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-134912.nc' 'SHA256' '8222ed792485afc6bd0fdf1786c4c97cd871016fae37a300488aa706d44c7959'
'cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_135001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/cdnc/cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_135001-144912.nc' 'SHA256' 'f9ee5dfa428e31fada0ab960b169be8501017e1139973857333091336fdd811c'
'cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-154912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/cdnc/cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-154912.nc' 'SHA256' 'c5e72dc54d6a52decea1a12c5ebe5cc729855a45dab9cca84b0f1fe95471b3b1'
'cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_155001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/cdnc/cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_155001-164912.nc' 'SHA256' '024ccf9cf579fb776007723b4dd97c0402987b4ba2057da283503d03c1ed3085'
'cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-174912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/cdnc/cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-174912.nc' 'SHA256' '4fe85918cf196e6e487a3361b780059b95d0ef5a9f349de68128cb5d377b142e'
'cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_175001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/cdnc/cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_175001-184912.nc' 'SHA256' 'e6f1f9526cc59feac2df05c9dcbfe5bd4819135a9c965a68b3d2d79ae0d160aa'
'cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/cdnc/cdnc_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' 'aedb38309b91a7682cbefde663f53508161de7afd0f6d5cf0b03b007ebf0aa72'
'cldncl_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/cldncl/cldncl_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'SHA256' 'b55ba02d8adce7b96e6216db60c5b129f7ee272361288987938462d50c84ec62'
'cldncl_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/cldncl/cldncl_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'SHA256' 'f845d64432ce313ac98ea5d95ad9ab6e1a2c067025caf3b1cc562807d8471c84'
'cldncl_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/cldncl/cldncl_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'SHA256' '6f2ba44553c3852db34926809c11d1292c359d17166bb85887bd43b8a3ea6c40'
'cldncl_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/cldncl/cldncl_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'SHA256' 'cc65ec965d49110b5e16ccfc4b75c906741e7afabf3f79010e00757320bf9873'
'cldncl_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/cldncl/cldncl_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'SHA256' 'a10c26a8c25a7f840f764fa95fe50395ec8b487ef36f1e75183fd05007b070fc'
'cldncl_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/cldncl/cldncl_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' 'caa356ea41ff54eb3bfc73cb781a6b7b7e2e9bca2f34cc5579fe30d0fcb1ba5a'
'concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-094912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concbc/concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-094912.nc' 'SHA256' '7dda50f05b507bbc4695015ff2788f4a709c5090802e530be16a64e608ad19b2'
'concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_095001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concbc/concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_095001-104912.nc' 'SHA256' '1a58ccf3fd88e795770c65a7c64ce525abfabea0a751bf1238600bdf076b1034'
'concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-114912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concbc/concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-114912.nc' 'SHA256' 'faef27cffeca692fcc922d126b9f44f847a2d71e016be38da320ffa12710f3a2'
'concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_115001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concbc/concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_115001-124912.nc' 'SHA256' '33e231f4e92d947ac731335fe5c80856a06115e38b80796212e621d048509ad2'
'concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-134912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concbc/concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-134912.nc' 'SHA256' '2fe5a6d2043683aa98044ddc27f755ce952e2c53dcfd5e9923bcf69830b0edc6'
'concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_135001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concbc/concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_135001-144912.nc' 'SHA256' '1b05b922944e8bf06ef5a096e537a880401ca5e3692dcde2646392509e27d20c'
'concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-154912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concbc/concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-154912.nc' 'SHA256' 'd4dec96eb1ccf11c89b7bd9ee912aebca8cf8a31d9d2e14c8bcac50e155b08fc'
'concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_155001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concbc/concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_155001-164912.nc' 'SHA256' 'c9195dad6513d274c0c8ccc53e7e0b16809fd0815d079464416cea467efe5a03'
'concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-174912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concbc/concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-174912.nc' 'SHA256' '4ca4eaec9d4ede6578d60c24ca6f66730c91dc881776bcb5848e9f41a389b6b8'
'concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_175001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concbc/concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_175001-184912.nc' 'SHA256' '745dc1f41764181f90b7165534ec640f0af50990a76973e09785c18124da579e'
'concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concbc/concbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' '136002f33a5c5441bc2745d1832a90df13948a1c016a6b487dd9bcc1def50718'
'concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-094912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concdust/concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-094912.nc' 'SHA256' '3b49a8ec57e7172165a561dfc8d2f2ea9fc7388c4bc80aaa62f585433c1113ae'
'concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_095001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concdust/concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_095001-104912.nc' 'SHA256' 'adb64f8a23ef5a832760f34b9f8de6459142564a409374fa5007f59aae162941'
'concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-114912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concdust/concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-114912.nc' 'SHA256' 'fc76003613f787618a5a3ff9758a5537999d1e0ae55592ccd2eef0ac01ab0dba'
'concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_115001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concdust/concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_115001-124912.nc' 'SHA256' '05ebc57d1021ba72170ad27a142aab9b8b9358546f5f588e3f3d9a99e4ca25ef'
'concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-134912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concdust/concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-134912.nc' 'SHA256' 'febd23cfba53e3ac602ed1744828197f0d956d1275c75b9a38ad34b8e70e3d71'
'concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_135001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concdust/concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_135001-144912.nc' 'SHA256' 'ce1fb2daa7f778c5d1dd06e0f3ebe24baf57a8d8f94dfdf271efdcd11ebec731'
'concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-154912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concdust/concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-154912.nc' 'SHA256' 'a9e5d97af3102972aeec3ec81b11bc2ff223fd08d3ac60d59a1b2b33699fe557'
'concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_155001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concdust/concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_155001-164912.nc' 'SHA256' '8477882d9a2708750a10e171551f9eafe7569371eab295f59bc3658a754d507c'
'concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-174912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concdust/concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-174912.nc' 'SHA256' '448d2e6e7e30e66da24909f20dd919150e68ca6da97abd6d876805ba6b1c1d63'
'concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_175001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concdust/concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_175001-184912.nc' 'SHA256' '21d609c81f17c8df5c466dd6d83b77f4fcfbd887d50aec543d0bb06568c28efd'
'concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concdust/concdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' 'dcd36889644d0cd328e97ae31dd521f77cb2f7f24a92a93c32f991c3ab110eed'
'concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-094912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concoa/concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-094912.nc' 'SHA256' 'dcb8775c29996222a7f34f6ec58d9681221b7bffd34eca3088e474a279c4ee0e'
'concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_095001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concoa/concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_095001-104912.nc' 'SHA256' '00955bfbe4417909d834bd451d545f187c347b68779ff751c933bfa2e64a6cd0'
'concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-114912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concoa/concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-114912.nc' 'SHA256' '99fb2b8fe11f6897bc47b87862b1b360dd7c9e883caea468df25876456832f06'
'concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_115001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concoa/concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_115001-124912.nc' 'SHA256' '1b91521fceaee8e25ae297f298d55000eada1637da713877b2b2e7c0a9e88198'
'concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-134912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concoa/concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-134912.nc' 'SHA256' '37dbcd5c3b75cfc9995ead4bfc3566b32d69f957859bd0f8de0325c62d5aad7a'
'concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_135001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concoa/concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_135001-144912.nc' 'SHA256' 'a332a8ca2d3e057e59d85c671378d1d53e08c04c8a95fbc5e18d0037bd9e0767'
'concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-154912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concoa/concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-154912.nc' 'SHA256' '10934b127552067bedc7ba8807d7ccf1366a1d33f4f81928296da80bbc5b74f3'
'concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_155001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concoa/concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_155001-164912.nc' 'SHA256' 'd0a31b269649127fe57a59bfa55ef21e77131f334630dfaee46b63985020a2ca'
'concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-174912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concoa/concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-174912.nc' 'SHA256' '27e198d5cfa067f1bdde6878a4d5fe2143a469bd8ac2446cf27d530b3b95587b'
'concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_175001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concoa/concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_175001-184912.nc' 'SHA256' '221443dbb56cecb092d0757d8d2a60a629279a1a28392f3845aef5d4ad77ff25'
'concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concoa/concoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' '418cb0b70cd3e2e924fdb35327e17ba2ba605cee4aade4a31e709c25707d0614'
'concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-094912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concso4/concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-094912.nc' 'SHA256' '98a6fbbeac2aeef153d24a7138397dce6be176a0aafc21f89d0e42724ff7a933'
'concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_095001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concso4/concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_095001-104912.nc' 'SHA256' 'c3f57001c81830111deb1dec15862453b32123f7ff945e36db3d6a0e0a9530f8'
'concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-114912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concso4/concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-114912.nc' 'SHA256' '5b32678acaecdd50ea8bba14ac30803aa8828d32bcda22076bc20e9b88fa04bc'
'concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_115001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concso4/concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_115001-124912.nc' 'SHA256' 'dfbf201b9ef75bf360dd5b2c32a858737d7e27d24cba578aedb682992842d5ab'
'concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-134912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concso4/concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-134912.nc' 'SHA256' 'ec0666395bb830db61f799204173be9317f4e31a08a3b9d4ef2891fa1f17442a'
'concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_135001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concso4/concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_135001-144912.nc' 'SHA256' '2ce5ff92f5e3b2fbe43bffbc7f148defb0a8d17c78142ea55301be93849078da'
'concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-154912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concso4/concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-154912.nc' 'SHA256' '0bead17568f580881bfb85d44d8dfed1fa3129201fd8849675b35a32a5fe3993'
'concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_155001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concso4/concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_155001-164912.nc' 'SHA256' '544cc7240095cc24a29094b73ce67d932024c9f61a19f48d6fc14b70ff6c8a1e'
'concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-174912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concso4/concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-174912.nc' 'SHA256' '5ca3f9baae7b7f11aa40a8830a17883abea936738fba3a4fe1d1fc8ca241241c'
'concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_175001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concso4/concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_175001-184912.nc' 'SHA256' 'b4fc7a94bdec3c474fbdd9ae4bb8a8ad1d06ca726cb14072f886b6fb84b61a02'
'concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concso4/concso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' '0144145a19120f3f3c2d4ac6c1e213a92f60d082548518bab146f2225df9ede2'
'concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-094912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concss/concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-094912.nc' 'SHA256' 'fdeaf52c1853d331b7c16511d4380500be100efc2898b6a180fdfc7fd9737904'
'concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_095001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concss/concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_095001-104912.nc' 'SHA256' '076d2eb3083c06d97d9b93644e0c5e63a9eb0086646293f1a9a982f1d0d1a866'
'concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-114912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concss/concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-114912.nc' 'SHA256' 'c656be4f49195fb58e1a452a64df12d2a555b1f880b8998b1ab00139438c0203'
'concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_115001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concss/concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_115001-124912.nc' 'SHA256' 'd638487e29325addba9ea154efccba6a0a70389c0862c2ad44aec06d0299a853'
'concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-134912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concss/concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-134912.nc' 'SHA256' '0e4cff8c330ea218bc45896e0dce9cb8c4e2d3d72adbd71af2b187dc5e09b4f2'
'concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_135001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concss/concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_135001-144912.nc' 'SHA256' 'c0a5038c2322cdd30b6c048ae046054f90a555d17afb36a2f8b07cb4d0e7c487'
'concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-154912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concss/concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-154912.nc' 'SHA256' '726f009a64da86acb0e68daac5896199455a1e6fcc1c8b61a082e7e9268cde0a'
'concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_155001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concss/concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_155001-164912.nc' 'SHA256' '6f9a813c7cc93416dfe0260882b707e93fd38c1f4bb75cd61a4c8297f2cd2253'
'concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-174912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concss/concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-174912.nc' 'SHA256' '58f81b3094df5aaf82634caa22836e8061df6970e2b0fa9fb203427f5627d755'
'concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_175001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concss/concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_175001-184912.nc' 'SHA256' 'de739345d5c113b4dc7fc1373f3f403dfa046941074a1b6e906d4c6bd39efd58'
'concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/concss/concss_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' 'ffafb92eb4fcf21c30c23e355c221a76743ab1ed537a48b8808ca4fe20f161bd'
'ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-094912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/ec550aer/ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-094912.nc' 'SHA256' 'c30ed588bca3f5768b6bf35516a366e7e73bf7e2fbb788e7b6ea46a3ef7cde71'
'ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_095001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/ec550aer/ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_095001-104912.nc' 'SHA256' '569958eeece1b09889a7701423ad07b6a6be05ce60099763e78a03b67ff81f17'
'ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-114912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/ec550aer/ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-114912.nc' 'SHA256' '6ff06e95a721afa78b1ae7a627ff9edbdbebde6597c29210dceae26aeea3be49'
'ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_115001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/ec550aer/ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_115001-124912.nc' 'SHA256' '4a915ca60f631594912285f5647109790b70129d156b811a47c1c01294c2f941'
'ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-134912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/ec550aer/ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-134912.nc' 'SHA256' 'e2817c8df1d5a14318aee3d059b8a45212c62c157cc8c16cb27519329ef460b8'
'ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_135001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/ec550aer/ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_135001-144912.nc' 'SHA256' '3f7a1dca96bad46ad0d3dfd9ddfdaa71bcc34d110c5a0af1c6fc919428a760dd'
'ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-154912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/ec550aer/ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-154912.nc' 'SHA256' 'ee3271c3f6d2d6c13883712ee9d52cb3b670f8a831fc0270f7ace31da20378d8'
'ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_155001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/ec550aer/ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_155001-164912.nc' 'SHA256' '312ef2186053f041498ffaaece7d18b560ef89b8996691176658ccdb52ed0458'
'ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-174912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/ec550aer/ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-174912.nc' 'SHA256' '7a5be7508b1a8264a36a6f68573de65e2b7bfdee853cdf170c3e025ab41e1677'
'ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_175001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/ec550aer/ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_175001-184912.nc' 'SHA256' '82657747098725834d1a111a16672a53ba883ea8260a266ad0cbfd746aec3bed'
'ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/ec550aer/ec550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' 'f051d4fad88db6dcdf7f3dfd939c6ed76cf613bb9933ddd722f683bd3f20ef58'
'loadbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadbc/loadbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'SHA256' '327aa2d9888e42c8d0e87e647dd38c3579ca49ab9aa961d36db139b8fef5845d'
'loadbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadbc/loadbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'SHA256' '248b7ab4d7520bd75b3b293dda1446c722f13484450398c3a8a6c84031d94262'
'loadbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadbc/loadbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'SHA256' '4a65409c65c1e3aecd6c221be259318bcca929521b80de1476d5a13ff1305728'
'loadbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadbc/loadbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'SHA256' '13656ad7b024c8804e944d0031f57aff3877f3263d0c3fd16d4edbeabe595d88'
'loadbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadbc/loadbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'SHA256' '93e75b2a46783ea627b8e642399582000a1f9cc71159128f4794b743d84bd083'
'loadbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadbc/loadbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' 'c6a0726620fd124de599fa7e20f3d06624f604c9711a8c310b68e7ef141ee703'
'loaddust_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loaddust/loaddust_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'SHA256' '6ca57ced471801a3138593ddc161158e471147dc2fdb49aea01aa4e6fb901aff'
'loaddust_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loaddust/loaddust_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'SHA256' '7bc6e284bee787efede7c4f9710340f727d20fccc96b95c756c587bcdbd7f6ed'
'loaddust_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loaddust/loaddust_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'SHA256' '59bd8d37c55727e1463f9a89a4249d5a60bb888b5915b3c801838c60509ca540'
'loaddust_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loaddust/loaddust_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'SHA256' '683d302fa5563e7edfc241db2b88494d6d366b72457637a55f07f798b2ac19af'
'loaddust_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loaddust/loaddust_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'SHA256' '075cc08db1f7eeaf38963b7992c01fdcea14011e1d2da97e09280f9134248a2d'
'loaddust_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loaddust/loaddust_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' 'e73b7a4cdb4b200af2645ad39d424bb0c98bc5fe8bb5d91e314dd66db7b33501'
'loadoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadoa/loadoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'SHA256' '334b3bd3a5afcda3e0d6bda474c8dce3c7051aa4e46b16884b8ee9424a92be20'
'loadoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadoa/loadoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'SHA256' '78ba14c52601795de76373e064d468bc56464377f701a5ee037619a806e9eb22'
'loadoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadoa/loadoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'SHA256' '959ee9ec9117fa0441c375c59b4e0393c76a9d065f171d83b3fadd0307cc6f74'
'loadoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadoa/loadoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'SHA256' 'a35a964e57ac5be183c422758e2c4882d324dfc52efb567bc14bb4d5c40eeca6'
'loadoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadoa/loadoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'SHA256' '9e4af663774486946630384417d5a86449c6756898f001e5a06b9b824a3cb82b'
'loadoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadoa/loadoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' 'fb852ed17635e6bc2422ecf27efcb96f0a4783da7e8814dd040fd7b18ccb3bc5'
'loadso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadso4/loadso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'SHA256' 'e110fccd91f324a7e34c7f2b29bc6a9d4dfafaf6b2a7f9f047e30d84db77f6e0'
'loadso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadso4/loadso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'SHA256' 'e6fdaf57b4090cf1f1ae675fac83ca66253429bbe07ce53dceae8881b4d1ebc1'
'loadso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadso4/loadso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'SHA256' 'a4647bf22985f51c6401751d600fe3244ab284be262938afe2da19eb08ea5248'
'loadso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadso4/loadso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'SHA256' '37c70f38ca01d1f2427f1e796ca52779e30444c4f12a28cbd7ea414b0029af55'
'loadso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadso4/loadso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'SHA256' '68d85d9ca49b2167bcfbb28793096cfb7b6ebedc898ca093ae5ff3839fb03580'
'loadso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadso4/loadso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' 'e4beba2e6d911c0570c80f167d948ea3cdf4a226ac58f31ddf80f1413a97e563'
'loadss_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadss/loadss_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'SHA256' 'c59bedbeba2a2d93c4ec010d2ffeda7ad9c6f7b971d1287c4d9752f68b1c559d'
'loadss_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadss/loadss_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'SHA256' '4e20e455ebc1ed6ec5d5ece38df61b8553a948c9232a7ff03c19471470d5cba8'
'loadss_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadss/loadss_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'SHA256' '85c0d404b9526a457ee1e51f6c25b62f4145684a739223ed74ed39582ae2c902'
'loadss_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadss/loadss_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'SHA256' 'a022df30e7267861e6d8147bcf2b4494c344fc3b2b1942d78dfb921a19ec3b38'
'loadss_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadss/loadss_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'SHA256' '392d6e323c23bb3f562bc09975e896797256b4946d49a2f949b402fdf0dbae95'
'loadss_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/loadss/loadss_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' 'a62e793bcbb370bb87a07bc5523eae72811df08cb7c6167e83bb043deec62bc9'
'od550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/od550aer/od550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'SHA256' 'b33a7c60ed8e125ec067694483928e5b9c372467850d81dfbaaa86a72b6d3f29'
'od550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/od550aer/od550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'SHA256' '950961c7f862a854d1390ddbafc263284b02ee77fdd8d91bec9e38b6bbc293b8'
'od550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/od550aer/od550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'SHA256' '4789ed3c878f585ab958f4cd77c86aec3f93c6ae71d3e6d973717717182d925f'
'od550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/od550aer/od550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'SHA256' '67d530ab7fcc2ed934029d30fcbf3ff77ad9aaa42b7e8076599426c2023e3b25'
'od550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/od550aer/od550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'SHA256' '454d5f61073dfe3be26c057147347b4370e992a6052cc83168a5481345ab78de'
'od550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/od550aer/od550aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' '972552f6f03b06a4c87e327d062d22de76b83d4fada5f08e34f01e2e2b0126e2'
'od550lt1aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/od550lt1aer/od550lt1aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'SHA256' 'd2c9c85296b3274d9a398888578b5f419d6214e0598ad9552637749c12e2f274'
'od550lt1aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/od550lt1aer/od550lt1aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'SHA256' '44b889cd9b488f21f0b0f528077413f49b4cf59a7968f26661ef2cceeeb6595c'
'od550lt1aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/od550lt1aer/od550lt1aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'SHA256' '3cdaa6205f810071a94654348645a717eaeceeed808757db713536d41de07d0a'
'od550lt1aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/od550lt1aer/od550lt1aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'SHA256' '54be0f7e0f06fc4813019149da5a792ce3741a14e42e42f6a807ce4cd1e0dc1e'
'od550lt1aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/od550lt1aer/od550lt1aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'SHA256' '94fffa70121a906bca94de9932939a756a1dbb4b56ad814fd7e2f48dd971173e'
'od550lt1aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/od550lt1aer/od550lt1aer_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' '7785aee28834a7dcc05d9a0d52fd8c494d8fb72555bf1c4eb1df3bc7680a061d'
'reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-094912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclwc/reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-094912.nc' 'SHA256' '2895f4bfa68ffb90a87588cb6140911d950ef25e9e3cff91da808a3311157629'
'reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_095001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclwc/reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_095001-104912.nc' 'SHA256' '567a4c8bc5613c178aa035277cd2cc37eaeda110844f19a6adda190f3df85afe'
'reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-114912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclwc/reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-114912.nc' 'SHA256' 'd13b4540580a6d903b2d567458513f954237beadb08580adf034b75d483b06ba'
'reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_115001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclwc/reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_115001-124912.nc' 'SHA256' '7e2a5fff87a4b970ac7f1843a714f530f051c0e0f1d4174664bd26a00443a68b'
'reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-134912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclwc/reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-134912.nc' 'SHA256' 'e703386f9bdfab1771eb51de49864b6dddb34179d75a3130073bc1f3fd6155ea'
'reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_135001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclwc/reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_135001-144912.nc' 'SHA256' 'a54f7665f68df057cef017533eceb34582f07d95e505322eff0fa7ffb709b172'
'reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-154912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclwc/reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-154912.nc' 'SHA256' '3533a218d64986117ae1e1ed11f3a23b3ff392298fbbad1c9a0183de9b400ab6'
'reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_155001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclwc/reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_155001-164912.nc' 'SHA256' '14d5ff1abee7f3a14afbc0d93b076d1910bc4b51c52b692e5d715b17662ce4bf'
'reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-174912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclwc/reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-174912.nc' 'SHA256' 'e7dbe912e0d0d4b15708c9a77590c09850b4a8fd1cc6cd03ffd57fe51c7e9e78'
'reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_175001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclwc/reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_175001-184912.nc' 'SHA256' 'cd06b56492c399be39ce16ad9a3d983cb8803b659301282286fdb858b2b7cc6a'
'reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclwc/reffclwc_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' '1d4f0e3528d44d28e93e5204b46f33c4f67eacaa4f46e725ed1959d23df40b6b'
'reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-094912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclws/reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-094912.nc' 'SHA256' 'eb228a1d82144bed9f46275c7ca310fa4b956808eddabe4b60e3fa86cf1394ce'
'reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_095001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclws/reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_095001-104912.nc' 'SHA256' 'a2b1434f50cd09c02d9d0533ae196caa31ca50ab89b78c5e9ace8adedae76a82'
'reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-114912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclws/reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-114912.nc' 'SHA256' 'ec266d4246dca1312684543f3b6d3a204a7f91eacd34f22781bdca1c18e39770'
'reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_115001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclws/reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_115001-124912.nc' 'SHA256' '5e810d5cb744de0866bcf8c6d339c35eaf65442d4ede3600002273256d31ba87'
'reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-134912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclws/reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-134912.nc' 'SHA256' '34dd6aa4eb917dc6e8bc85f40306fca9bf3638bdb5f438f77a1dd73c0b5ccadc'
'reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_135001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclws/reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_135001-144912.nc' 'SHA256' 'a97e531450786206dfb8c728ccafdfd5ea473aea7cbbf10cbcb63fade45a7f1c'
'reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-154912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclws/reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-154912.nc' 'SHA256' '5c638e8aa190919abb2448698228df0f79ac7350bc41eac6febdd6ffc9205880'
'reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_155001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclws/reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_155001-164912.nc' 'SHA256' '72e1760ce2d2adb635e82f1a8b6375cf0de5563f3d8108c2ead81d3d55b9397a'
'reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-174912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclws/reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-174912.nc' 'SHA256' '0bb30a1a184bcf63daa2e6a7d59ec466376337f06fa1d7c2747843684bf52b6e'
'reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_175001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclws/reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_175001-184912.nc' 'SHA256' 'ad9978a9b5d21b037085a97cf8b0cb836eca5ccca095f3531048acc3826fdd96'
'reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclws/reffclws_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' '8a2927ae94834b632733a56eb4199dfa6a2964d523abb8b3691906daa54cc6c5'
'reffclwtop_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclwtop/reffclwtop_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'SHA256' '48484d955b73376c5a1a5a19ffbf434f161a8eb482f74377a94805013f67e9e0'
'reffclwtop_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclwtop/reffclwtop_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'SHA256' '6258b6b8fa9105d1896f1497361fed76e5f4fdf6902c410ab47ff3415f1972ab'
'reffclwtop_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclwtop/reffclwtop_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'SHA256' '9373bcd4c5f3f1130cce798831447fc5bc7add632720e73ec4e916cac574f746'
'reffclwtop_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclwtop/reffclwtop_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'SHA256' '392d042e504859debf6eac8da15f4f2f841803aa46f59e834b4d12d85d32d642'
'reffclwtop_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclwtop/reffclwtop_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'SHA256' 'cd8faca3112b18dec013aa5e21bc5c7158853289122e40a4dc03e7c8c9e2814e'
'reffclwtop_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/reffclwtop/reffclwtop_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' '9a5a7abbb7f88920c97daae768a0f734c4ecf2e74ca6f1a05e84c24aa915e93b'
'sconcbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcbc/sconcbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'SHA256' '3bbe03e4f787ce987b795c202bce029a3fa90265eb046b91bf42dd2250d40599'
'sconcbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcbc/sconcbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'SHA256' '117868e6c64c309552e007bc2d2e2c3a8c56b55cb520428567ea7327c3c41597'
'sconcbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcbc/sconcbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'SHA256' 'ada2ff0dcfc5227facb975756df9898ecd632f3abf1270db7fd3d522321328de'
'sconcbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcbc/sconcbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'SHA256' '81560c420a1b3494a2436bc39114e409bbd3cbc9ce1462ba3eb64e7d7a4d6341'
'sconcbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcbc/sconcbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'SHA256' '05d3663095e909e1a8edfe13e72c44629f4609c16a7b423e678edbab350f3977'
'sconcbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcbc/sconcbc_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' 'decf3a326238a374f9d8f51e3b9ba81a59cccaf68a12b137e477b8834f4e4431'
'sconcdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcdust/sconcdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'SHA256' 'e40d100b111299deb3e557cc9a0d5ea2a0e5a7c236c760c5c6395d96734991b7'
'sconcdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcdust/sconcdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'SHA256' '0825fab9a3a6787519874880f789fbe3532abe4cbb25f477d50dd67fb5350059'
'sconcdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcdust/sconcdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'SHA256' 'f8c055bc14561cbd15dcb2c379bd843869dcb8f8d059544ca5c34b14748838ef'
'sconcdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcdust/sconcdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'SHA256' '85c3df34e33721fac759f3944a6c1b5d218c42a16c8dbf57d65c3714464c19ee'
'sconcdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcdust/sconcdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'SHA256' '65ee30cc1edf1750e2fa01c9a21cef894414fc1e4f54821bcf6a4d9f035e853d'
'sconcdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcdust/sconcdust_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' '1b0d8b366aafb38d3ccfeaaa5d267233af0af493225b8fcd4c383a76e909b9a0'
'sconcoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcoa/sconcoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'SHA256' 'f8e4e8d2f56ad39c84c7fe4f57bf5515ce6764ef0e73d490e141ea7af8159597'
'sconcoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcoa/sconcoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'SHA256' '7405c45f90f4680cd20019e47360aa513c7ba5ef2feed7f75df0b37448824d3a'
'sconcoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcoa/sconcoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'SHA256' 'cf4a8f0c4d552db5a797c118d79ba494bab8ef364cf1ef946c30a4b452808625'
'sconcoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcoa/sconcoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'SHA256' '12e72ddd313d46453628aab2dc419019008433d7eff4b699fa58ad80af383904'
'sconcoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcoa/sconcoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'SHA256' '22eeb8fef498b4353a50d6567db81f198f6ad70586450091fceb16fa7bd4090d'
'sconcoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcoa/sconcoa_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' '94d814124043ba2e7bfc548c592b3b8cdbad41ce59d526e4dd8ad1408d340e3d'
'sconcso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcso4/sconcso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'SHA256' '65276e537d4848d0c37aebe4f191d66b957b5e94b4964ced0520729d290cdb62'
'sconcso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcso4/sconcso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'SHA256' 'f6f3d6642b3bd60c84274003b605be1fcce59b8a30d2f30f0c7aa2ee16df93bb'
'sconcso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcso4/sconcso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'SHA256' 'ea19b86eadf08686b2f0a293b4f6634f6c9787b9061e5985e170e426d76de2c1'
'sconcso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcso4/sconcso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'SHA256' 'a3509751d6742e12ba74d0a18f619ffff8356cf2f5500f73acf94335d70c2a10'
'sconcso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcso4/sconcso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'SHA256' 'f98bdd3d31e84687a1ca2ea542e2e80cd604e0837e787eb3e1c0ea5af7c24076'
'sconcso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcso4/sconcso4_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' '7ef949a988ee7c2531f3780c811977a6b78897e52f03ff5feb6302705a0aa547'
'sconcss_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcss/sconcss_aero_IPSL-CM5A-LR_past1000_r1i1p1_085001-104912.nc' 'SHA256' '8b5217e5044500efc6e40d227ee6fbc564481dcad529ab0766b1193dd8226e32'
'sconcss_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcss/sconcss_aero_IPSL-CM5A-LR_past1000_r1i1p1_105001-124912.nc' 'SHA256' 'b2e43b3ff3a45d233a3d6414f58b46bf6049c72561088633a6efdb0f3fb7de3c'
'sconcss_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcss/sconcss_aero_IPSL-CM5A-LR_past1000_r1i1p1_125001-144912.nc' 'SHA256' 'b561133d9e7f15fe003ebf4312e1da86b03fc706a69045da6bb5f7e6828b1b27'
'sconcss_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcss/sconcss_aero_IPSL-CM5A-LR_past1000_r1i1p1_145001-164912.nc' 'SHA256' 'dbf1c9e03e48665f3d8bb024b2a23accf3cbc1ffb61e9ff32dd1276323c52a47'
'sconcss_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcss/sconcss_aero_IPSL-CM5A-LR_past1000_r1i1p1_165001-184912.nc' 'SHA256' '43640efb28b914d0528df2ec43fae1c78e54747aecb83962034c04cb28a93fc8'
'sconcss_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'http://vesg.ipsl.upmc.fr/thredds/fileServer/cmip5/output1/IPSL/IPSL-CM5A-LR/past1000/mon/aerosol/aero/r1i1p1/v20120804/sconcss/sconcss_aero_IPSL-CM5A-LR_past1000_r1i1p1_185001-185012.nc' 'SHA256' '8a48b981f0f1f762e98e69d4828e977089faf13b96122f118570a64944f3811c'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 189 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
